# Generated by Django 5.1.2 on 2025-09-15 10:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('corporate_email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('contact', models.CharField(max_length=14)),
                ('lastname', models.CharField(max_length=25)),
                ('firstname', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=25, null=True)),
                ('suffix', models.CharField(blank=True, max_length=5, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('college', models.CharField(blank=True, choices=[('CAD', 'College of Architecture and Design'), ('CAH', 'College of Arts and Humanities'), ('CBA', 'College of Business and Accountancy'), ('CCJE', 'College of Criminal Justice and Education'), ('CoE', 'College of Engineering'), ('CHTM', 'College of Hospitality Management and Tourism'), ('CNHS', 'College of Nursing and Health Sciences'), ('CS', 'College of Sciences'), ('CTE', 'College of Teacher Education')], max_length=100, null=True)),
                ('program', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_contact', models.CharField(blank=True, max_length=13, null=True)),
                ('father_address', models.CharField(blank=True, max_length=150, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_contact', models.CharField(blank=True, max_length=13, null=True)),
                ('mother_address', models.CharField(blank=True, max_length=150, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_contact', models.CharField(blank=True, max_length=13, null=True)),
                ('guardian_address', models.CharField(blank=True, max_length=150, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('workplace', models.CharField(blank=True, choices=[('university president', 'University President'), ('university president coa', 'University President COA'), ('office of the university secretary', 'Office of the University Secretary'), ('legal office', 'Legal Office (Data Privacy Office)'), ('planning and development office', 'Planning and Development Office'), ('office of the internal audit services', 'Office of the Internal Audit Services (QMS)'), ('public information office', 'Public Information Office'), ('alumni affairs office', 'Alumni Affairs Office'), ('academic council', 'Academic Council'), ('administrative council', 'Administrative Council'), ('research and extension council', 'Research and Extension Council'), ('management committee', 'Management Committee'), ('university ethics committee', 'University Ethics Committee'), ('gender and development office', 'Gender and Development Office'), ('international affairs and linkages office', 'International Affairs and Linkages Office'), ('office of the vice president for finance and administration', 'Office of the Vice President for Finance and Administration'), ('bids and awards committee', 'Bids and Awards Committee'), ('administrative management office', 'Administrative Management Office'), ('records archives management office', 'Records Archives Management Office'), ('human resource management office', 'Human Resource Management Office'), ('faculty and staff development unit', 'Faculty and Staff Development Unit'), ('health services office', 'Health Services Office'), ('management information system information office', 'Management Information System Information Office'), ('security office', 'Security Office'), ('supply and property management office', 'Supply and Property Management Office'), ('disaster risk reduction and management office', 'Disaster Risk Reduction and Management Office'), ('project management office', 'Project Management Office'), ('general services office', 'General Services Office'), ('utility and environmental management office', 'Utility and Environmental Management Office'), ('motorpool office', 'Motorpool Office'), ('finance management service offices (cfo)', 'Finance Management Service Offices (CFO)'), ('accounting office', 'Accounting Office'), ('processing unit', 'Processing Unit'), ('student accounts & assessment', 'Student Accounts & Assessment'), ('financial reporting', 'Financial Reporting'), ('budget office', 'Budget Office'), ('production services/income generating projects office', 'Production Services/Income Generating Projects Office'), ('production', 'Production'), ('sifma', 'SIFMA'), ('university bookstore', 'University Bookstore'), ('auxiliary services - canteen', 'Auxiliary Services - Canteen'), ('auxiliary services - hostel', 'Auxiliary Services - Hostel'), ('auxiliary services - dormitory', 'Auxiliary Services - Dormitory'), ('university printing press', 'University Printing Press'), ('procurement office', 'Procurement Office'), ('cashiers office', 'Cashierâ€™s Office'), ('office of the vice president for research, development and extension', 'Office of the Vice President for Research, Development and Extension'), ('university research office', 'University Research Office'), ('university extension service office', 'University Extension Service Office'), ('intellectual property and technology transfer office', 'Intellectual Property and Technology Transfer Office'), ('palawan studies center', 'Palawan Studies Center'), ('center for strategy policy and governance', 'Center for Strategy Policy and Governance'), ('panrehiyong iv-b sentro ng wikang pilipino', 'Panrehiyong IV-B Sentro ng Wikang Pilipino'), ('marine science research center', 'Marine Science Research Center'), ('palawan international technology business incubator & startup hub office', 'Palawan International Technology Business Incubator & Startup Hub Office'), ('office of the vice president for academic affairs', 'Office of the Vice President for Academic Affairs'), ('office of the eteeap', 'Office of the ETEEAP'), ('office of the university registrar', 'Office of the University Registrar'), ('university quality assurance center', 'University Quality Assurance Center'), ('office of the university sports', 'Office of the University Sports'), ('office of the curriculum & instructional materials development', 'Office of the Curriculum & Instructional Materials Development'), ('office of the student affairs and services', 'Office of the Student Affairs and Services'), ('social and cultural affairs (psu band, psu dance troupe, psu singers)', 'Social and Cultural Affairs (PSU Band, PSU Dance Troupe, PSU Singers)'), ('office of the university library', 'Office of the University Library'), ('psu museum', 'PSU Museum'), ('CAD', 'College of Architecture and Design'), ('CAH', 'College of Arts and Humanities'), ('CBA', 'College of Business and Accountancy'), ('CCJE', 'College of Criminal Justice and Education'), ('CoE', 'College of Engineering'), ('CHTM', 'College of Hospitality Management and Tourism'), ('CNHS', 'College of Nursing and Health Sciences'), ('CS', 'College of Sciences'), ('CTE', 'College of Teacher Education')], max_length=150, null=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('security', 'Security'), ('admin', 'Admin')], default='user', max_length=20, null=True)),
                ('school_role', models.CharField(blank=True, choices=[('student', 'Student'), ('faculty & staff', 'Faculty and Staff'), ('university official', 'University Personnel')], max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('badgeNumber', models.CharField(max_length=10)),
                ('job_title', models.CharField(max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=4)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('system', 'System'), ('user', 'User'), ('alert', 'Alert')], max_length=20)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications_posted', to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('posted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements_posted', to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('admin_id', models.CharField(max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('make_model', models.CharField(max_length=35)),
                ('plate_number', models.CharField(max_length=10, unique=True)),
                ('year_model', models.IntegerField()),
                ('color', models.CharField(max_length=20)),
                ('type', models.CharField(choices=[('motor', 'Motor'), ('car', 'Car'), ('van', 'Van')], max_length=5)),
                ('engine_number', models.CharField(max_length=25)),
                ('chassis_number', models.CharField(max_length=17)),
                ('owner_firstname', models.CharField(blank=True, max_length=45, null=True)),
                ('owner_middlename', models.CharField(blank=True, max_length=45, null=True)),
                ('owner_lastname', models.CharField(blank=True, max_length=45, null=True)),
                ('owner_suffix', models.CharField(blank=True, max_length=5, null=True)),
                ('relationship_to_owner', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=13, null=True)),
                ('address', models.CharField(blank=True, max_length=75, null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registration_number', models.BigAutoField(primary_key=True, serialize=False)),
                ('files', models.URLField(max_length=255)),
                ('status', models.CharField(choices=[('no application', 'No Application'), ('application submitted', 'Application Submitted'), ('initial approval', 'Waiting for Approval by OIC'), ('final approval', 'Waiting for Final Approval by GSO - Director'), ('approved', 'Approved'), ('sticker released', 'Vehicle Pass Sticker Released'), ('rejected', 'Rejected')], default='no application', max_length=60)),
                ('remarks', models.TextField(null=True)),
                ('date_of_filing', models.DateTimeField(auto_now_add=True)),
                ('sticker_released_date', models.DateField(blank=True, null=True)),
                ('e_signature', models.TextField(blank=True, null=True)),
                ('printed_name', models.CharField(blank=True, max_length=255, null=True)),
                ('signature_date', models.DateTimeField(blank=True, null=True)),
                ('final_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='final_approvals', to='vehicle_pass.securityprofile')),
                ('initial_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial_approvals', to='vehicle_pass.securityprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.userprofile')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehiclePass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pass_number', models.CharField(max_length=20)),
                ('pass_expire', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('revoked', 'Revoked')], default='active', max_length=10)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vehicle_pass.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
